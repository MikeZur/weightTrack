<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>Holger Voormann: Eclipse Oxygen.1a IDE Improvements: Java 9, JUnit 5, General, Gradle and PHP</title>
	<guid isPermaLink="false">http://eclipsehowl.wordpress.com/?p=1269</guid>
	<link>https://eclipsehowl.wordpress.com/2017/11/11/eclipse-oxygen-1a-ide-improvements-java-9-junit-5-general-gradle-and-php/</link>
	<description>&lt;p&gt;Oxygen.1a (4.7.1a) was released two weeks after Oxygen.1 (4.7.1) on October 11, 2017. Oxygen.1 includes bug fixes and minor improvements. Since Oxygen.1a, the Eclipse IDE runs out of the box with Java 9 and supports development for Java 9 as well as testing with JUnit 5. Many thanks to all of you who have contributed in any way.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLnh_8hTD4yvnhXSttuewEKgKkmlIj_ND-&quot;&gt;As usual&lt;/a&gt; I made a short video that shows some improvements in action:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8&quot;&gt;&lt;img alt=&quot;Eclipse Oxygen.1a IDE Improvements: Java 9, JUnit 5, General, Gradle and PHP&quot; class=&quot;alignnone size-full wp-image-1149&quot; height=&quot;253&quot; src=&quot;https://eclipsehowl.files.wordpress.com/2017/11/eclipse_oxygen_1_ide_improvements.png?w=450&amp;amp;h=253&quot; width=&quot;450&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=37s&quot;&gt;Java 9&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(see also &lt;a href=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/#java-9&quot;&gt;Eclipse Project 4.7.1a New and Noteworthy – Java 9&lt;/a&gt; and &lt;a href=&quot;https://wiki.eclipse.org/Java9/Examples&quot;&gt;Eclipse Wiki – Java 9 Examples&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=37s&quot; rel=&quot;noopener&quot;&gt;0:37 Creation of a Java 9 application that consists of two modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=2m5s&quot; rel=&quot;noopener&quot;&gt;2:05 Exporting the application to JARs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=2m21s&quot; rel=&quot;noopener&quot;&gt;2:21 Running the exported application from the command line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=3m50s&quot;&gt;JUnit 5&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(see also &lt;a href=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/#junit-5-support&quot;&gt;Eclipse Project 4.7.1a New and Noteworthy – JUnit 5&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=3m54s&quot; rel=&quot;noopener&quot;&gt;3:54 New Junit 5 alias Jupiter test case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=4m8s&quot; rel=&quot;noopener&quot;&gt;4:08 &lt;code&gt;assertThrows(...)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=4m32s&quot; rel=&quot;noopener&quot;&gt;4:32 &lt;code&gt;assertAll(...)&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=4m48s&quot; rel=&quot;noopener&quot;&gt;4:48 &lt;code&gt;@DisplayName&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=4m55s&quot; rel=&quot;noopener&quot;&gt;4:55 &lt;code&gt;@Disabled&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=5m&quot; rel=&quot;noopener&quot;&gt;5:00 &lt;code&gt;@ParameterizedTest&lt;/code&gt; with &lt;code&gt;@ValueSource&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=5m21s&quot; rel=&quot;noopener&quot;&gt;5:21 &lt;code&gt;@ParameterizedTest&lt;/code&gt; with &lt;code&gt;@CsvSource&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=5m34s&quot; rel=&quot;noopener&quot;&gt;5:34 &lt;code&gt;@TestFactory&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=5m55s&quot; rel=&quot;noopener&quot;&gt;5:55 &lt;code&gt;@Tag&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=6m7s&quot; rel=&quot;noopener&quot;&gt;6:07 &lt;code&gt;@Nested&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=6m26s&quot;&gt;General&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(see also &lt;a href=&quot;https://bugs.eclipse.org/bugs/buglist.cgi?classification=Eclipse&amp;amp;target_milestone=4.7.1&amp;amp;target_milestone=4.7.1a&amp;amp;order=votes%20DESC&quot;&gt;in Eclipse 4.7.1/4.7.1a closed bugs&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=6m28s&quot; rel=&quot;noopener&quot;&gt;6:28 Bug in three-way compare editor has been fixed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=6m50s&quot; rel=&quot;noopener&quot;&gt;6:50 RSS Feed reader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=7m40s&quot; rel=&quot;noopener&quot;&gt;7:40 Dark theme improvements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=7m54s&quot;&gt;Gradle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(see also &lt;a href=&quot;https://projects.eclipse.org/projects/tools.buildship/reviews/2.1.0-release-review&quot;&gt;Eclipse Buildship 2.1.0 New and Noteworthy&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=7m59s&quot; rel=&quot;noopener&quot;&gt;7:59 Settings on run configuration, project and project level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=8m12s&quot; rel=&quot;noopener&quot;&gt;8:12 Build scans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=8m36s&quot;&gt;PHP&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(see also &lt;a href=&quot;https://bugs.eclipse.org/bugs/buglist.cgi?list_id=16397460&amp;amp;product=PDT&amp;amp;query_format=advanced&amp;amp;target_milestone=5.1&quot;&gt;in PDT 5.1 closed bugs&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=7m59s&quot; rel=&quot;noopener&quot;&gt;8:45 &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; as constants in lower-case only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=9m3s&quot; rel=&quot;noopener&quot;&gt;9:03 PHPDoc is now correctly generated also for boolean parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/wI3VC1lhbK8?t=9m7s&quot; rel=&quot;noopener&quot;&gt;9:07 Generate getters for a boolean field: prefix &lt;em&gt;is&lt;/em&gt; instead of &lt;em&gt;get&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details about Java 9, JUnit 5 and other Eclipse topics can be seen in the recently uploaded &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSGuPFhGykvEalf5xyb9y5m&quot;&gt;177 EclipseCon Europe 2017 videos with a total duration of more than 3 days and 19 hours&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Next releases (&lt;a href=&quot;http://www.google.com/calendar/embed?src=gchs7nm4nvpm837469ddj9tjlk%40group.calendar.google.com&quot;&gt;calendar&lt;/a&gt; / &lt;a href=&quot;http://www.google.com/calendar/ical/gchs7nm4nvpm837469ddj9tjlk%40group.calendar.google.com/public/basic.ics&quot;&gt;ICAL&lt;/a&gt;):&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com/calendar/event?eid=MWlrcnVqdjF1ZHY4Ymg2N3JjMHZlcW0wOXYgZ2NoczdubTRudnBtODM3NDY5ZGRqOXRqbGtAZw&quot;&gt;Oxygen.2 on December 20, 2017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com/calendar/event?eid=Mm1jajlpa2hncHU4NzJhNzdqMXFwMDM2bDUgZ2NoczdubTRudnBtODM3NDY5ZGRqOXRqbGtAZw&quot;&gt;Oxygen.3 on March 21, 2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com/calendar/event?eid=NWI2cXM4MHFzc2IzbHRvYWZhMjVmajJnbzkgZ2NoczdubTRudnBtODM3NDY5ZGRqOXRqbGtAZw&quot;&gt;Photon.0 on June 27, 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.eclipse.org/FAQ_How_do_I_upgrade_Eclipse_IDE%3F&quot;&gt;Upgrade to Eclipse Oxygen.1a&lt;/a&gt; or &lt;a href=&quot;https://www.eclipse.org/downloads/eclipse-packages/&quot;&gt;download Eclipse Oxygen.1a&lt;/a&gt; and happy coding!&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/eclipsehowl.wordpress.com/1269/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/eclipsehowl.wordpress.com/1269/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=eclipsehowl.wordpress.com&amp;amp;blog=11064764&amp;amp;post=1269&amp;amp;subd=eclipsehowl&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sat, 11 Nov 2017 13:44:31 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2017: Replay EclipseCon Europe 2017</title>
	<guid isPermaLink="false">https://www.eclipsecon.org/europe2017/news/4248 at https://www.eclipsecon.org/europe2017</guid>
	<link>https://www.eclipsecon.org/europe2017/news/replay-eclipsecon-europe-2017</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;If you missed a talk at this year's conference, there's a good chance that you'll be able to replay it. You'll find most of the talks from this year are online.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2017/news/replay-eclipsecon-europe-2017&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/europe2017/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/Screen%20Shot%202017-11-10%20at%202.05.25%20PM.png?itok=wpfHn44i&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Fri, 10 Nov 2017 13:04:51 +0000</pubDate>
</item>
<item>
	<title>Kichwa Coders: Debug Protocol vs Language Server Protocol</title>
	<guid isPermaLink="false">http://kichwacoders.com/?p=3103</guid>
	<link>https://kichwacoders.com/2017/11/08/debug-protocol-vs-language-server-protocol/</link>
	<description>&lt;p&gt;It is safe to say that the &lt;a href=&quot;https://kichwacoders.com/2017/11/03/the-language-server-protocol-will-revolutionize-how-you-code/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;language server protocol (LSP) is the future of developer tools&lt;/a&gt;.  When it comes to the equivalent for debug, &lt;a href=&quot;https://kichwacoders.com/2017/07/28/what-about-a-common-debug-protocol/&quot;&gt;the debug protocol&lt;/a&gt; is ‘LSP for debuggers’. It is a useful tagline but here are three key differences to be aware of:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;State – &lt;/strong&gt;the big mindshift with LSP is that servers are stateless. The clients store all the state e.g. the files themselves and settings (what language, classpath, etc). Any state kept on the serverside (e.g. the index) is usually purely for performance reasons. What this means is that, for instance, servers can be restarted and carry on seamlessly without having to know anything of what happened in the system beforehand. On the other hand, the debug protocol is not stateless, servers need to know all sorts of state and sequences of what has happened, so the design space is different for this protocol.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON RPC 2.0 Spec (and cancellable requests)&lt;/strong&gt; – The LSP defines JSON-RPC messages for requests, responses and notifications. The debug protocol was created before JSON RPC 2.0 spec was finalized, debug protocol uses a similar structure, but it is not cross compatible. For example, the JSON field name for the method to call is &lt;strong&gt;command&lt;/strong&gt; in debug protocol and &lt;strong&gt;method&lt;/strong&gt; in JSON RPC 2.0. The type of message (event, request, or response) is explicit in DSP in the &lt;strong&gt;type&lt;/strong&gt; field, but is implicit in JSON RPC 2.0 (based on presence of the combination of &lt;strong&gt;method&lt;/strong&gt;, &lt;strong&gt;id&lt;/strong&gt;, &lt;strong&gt;result&lt;/strong&gt; and &lt;strong&gt;error &lt;/strong&gt;fields). However using a library like &lt;a href=&quot;https://github.com/eclipse/lsp4j/blob/master/documentation/jsonrpc.md&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;org.eclipse.lsp4j.jsonrpc&lt;/a&gt; can hide such differences and provide equivalent higher level abstractions (like Java interfaces) and leave the library to handle the differences. The LSP has a nice feature, cancellable requests, that is an extension to JSON RPC2.0 that is also not available in the debug protocol: &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md#-cancellation-support&quot;&gt;https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md#-cancellation-support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ubiquity&lt;/strong&gt; – although the LSP was defined originally for use in VS Code do you know that the 2 flagship languages for VS Code are not based on LSP? Typescript and javascript language tooling is not done using LSP. On the other hand the debug protocol does underpin all the debugger implementations in VS Code, including the flagship node debuggers for V8 and Chrome.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All that being said, it’s worth repeating the common benefits of both protocols which are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;good separation of client/server&lt;/li&gt;
&lt;li&gt;building the tooling once and reusing it across IDEs and editors i.e. vs code, eclipse, atom, etc&lt;/li&gt;
&lt;li&gt;better unit/isolated testing&lt;/li&gt;
&lt;li&gt;write in language most suited to the job&lt;/li&gt;
&lt;li&gt;more effective way for tool developers to keep pace with underlying tools&lt;/li&gt;
&lt;/ul&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kichwacoders.wordpress.com/3103/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kichwacoders.wordpress.com/3103/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kichwacoders.com&amp;amp;blog=68353182&amp;amp;post=3103&amp;amp;subd=kichwacoders&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 08 Nov 2017 13:09:47 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Accelerating the Adoption of Java Microservices with Eclipse MicroProfile</title>
	<guid isPermaLink="true">http://www.infoq.com/news/2017/11/jax-london-microprofile?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>http://www.infoq.com/news/2017/11/jax-london-microprofile?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;http://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;InfoQ caught up with Emily Jiang from IBM to hear about the new Eclipse MicroProfile project and the new release, with extended fault tolerance and other new features. &lt;/p&gt; &lt;i&gt;By Monica Beckwith&lt;/i&gt;</description>
	<pubDate>Wed, 08 Nov 2017 06:30:00 +0000</pubDate>
</item>
<item>
	<title>Lorenzo Bettini: How to add Eclipse launcher in Gnome dock</title>
	<guid isPermaLink="false">http://www.lorenzobettini.it/?p=982</guid>
	<link>http://www.lorenzobettini.it/2017/11/how-to-add-eclipse-launcher-in-gnome-dock/</link>
	<description>&lt;p&gt;In this post I’ll show how to add an Eclipse launcher as a favorite (pinned) application in the Gnome dock (I’m using Ubuntu Artful). This post is inspired by &lt;a href=&quot;http://blog.ttoine.net/en/2016/06/30/how-to-add-eclipse-neon-launcher-in-gnu-linux-menus-and-launchers/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;http://blog.ttoine.net/en/2016/06/30/how-to-add-eclipse-neon-launcher-in-gnu-linux-menus-and-launchers/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First of all, you need to create a .desktop file, where you need to specify the full path of your Eclipse installation:&lt;/p&gt;&lt;pre class=&quot;crayon-plain-tag&quot;&gt;[Desktop Entry]
Version=Oxygen
Name=Eclipse Java
Comment=Eclipse is an IDE
Exec=/home/bettini/eclipse/java-latest-released/eclipse/eclipse
Icon=/home/bettini/eclipse/java-latest-released/eclipse/icon.xpm
Terminal=false
Type=Application
Categories=Utility;Application;Development;&lt;/pre&gt;&lt;p&gt;This is relative to my installation of Eclipse which is in the folder &lt;strong&gt;/home/bettini/eclipse/java-latest-released/eclipse&lt;/strong&gt;, note the executable “eclipse” and the “icon.xpm”. The name “&lt;strong&gt;Eclipse Java&lt;/strong&gt;” is what will appear as the launcher name both in Gnome applications and later in the dock.&lt;/p&gt;
&lt;p&gt;Make this file executable.&lt;/p&gt;
&lt;p&gt;Copy this file in your home folder in &lt;strong&gt;.local/share/applications&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now in Gnome Activities search for such a launcher and it should appear:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lorenzobettini.it/2017/11/how-to-add-eclipse-launcher-in-gnome-dock/screenshot-from-2017-11-07-13-50-05/&quot; rel=&quot;attachment wp-att-984&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-984&quot; height=&quot;208&quot; src=&quot;http://www.lorenzobettini.it/wp-content/uploads/2017/11/Screenshot-from-2017-11-07-13-50-05.png&quot; width=&quot;390&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Select it and make sure that Eclipse effectively runs.&lt;/p&gt;
&lt;p&gt;Unfortunately, in the dock, there’s no contextual menu for you to add it as a favorite and pin it to the dock:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lorenzobettini.it/2017/11/how-to-add-eclipse-launcher-in-gnome-dock/screenshot-from-2017-11-07-13-54-09/&quot; rel=&quot;attachment wp-att-986&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-986&quot; height=&quot;233&quot; src=&quot;http://www.lorenzobettini.it/wp-content/uploads/2017/11/Screenshot-from-2017-11-07-13-54-09.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But you can still add it to the dock favorites (and thus pin it there) by using the corresponding contextual menu that is available when the launcher appears in the Activities:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lorenzobettini.it/2017/11/how-to-add-eclipse-launcher-in-gnome-dock/screenshot-from-2017-11-07-13-56-36/&quot; rel=&quot;attachment wp-att-988&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-988&quot; height=&quot;229&quot; src=&quot;http://www.lorenzobettini.it/wp-content/uploads/2017/11/Screenshot-from-2017-11-07-13-56-36.png&quot; width=&quot;483&quot; /&gt;&lt;/a&gt;And there you go: the Eclipse launcher is now on your dock and it’s there to stay &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.3/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lorenzobettini.it/2017/11/how-to-add-eclipse-launcher-in-gnome-dock/screenshot-from-2017-11-07-13-57-38/&quot; rel=&quot;attachment wp-att-989&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-989&quot; height=&quot;249&quot; src=&quot;http://www.lorenzobettini.it/wp-content/uploads/2017/11/Screenshot-from-2017-11-07-13-57-38.png&quot; width=&quot;114&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;div class=&quot;sociable&quot;&gt;&lt;div class=&quot;sociable_tagline&quot;&gt;Be Sociable, Share!&lt;/div&gt;&lt;ul class=&quot;clearfix&quot;&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://twitter.com/intent/tweet?text=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock%20-%20http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F%20&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.facebook.com/share.php?u=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;t=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;https://mail.google.com/mail/?view=cm&amp;amp;fs=1&amp;amp;to&amp;amp;su=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;body=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;ui=2&amp;amp;tf=1&amp;amp;shva=1&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;email&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; rel=&quot;nofollow&quot; title=&quot;Add to favorites - doesn't work in Chrome&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;StumbleUpon&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://delicious.com/post?url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;notes=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Delicious&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.google.com/reader/link?url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;srcURL=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;srcTitle=Lorenzo+Bettini+My+Home+Page&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Google Reader&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.linkedin.com/shareArticle?mini=true&amp;amp;url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;source=Lorenzo+Bettini+My+Home+Page&amp;amp;summary=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.blinklist.com/index.php?Action=Blink/addblink.php&amp;amp;Url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;Title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&quot; rel=&quot;nofollow&quot; style=&quot;background-position: 0px 0px;&quot; target=&quot;_blank&quot; title=&quot;BlinkList&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a rel=&quot;nofollow&quot; style=&quot;cursor: pointer;&quot;&gt;&lt;img src=&quot;http://www.lorenzobettini.it/wp-content/plugins/sociable/images/more.png&quot; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div id=&quot;sociable-post-982&quot; style=&quot;display: none;&quot;&gt;   

    &lt;div id=&quot;sociable&quot; style=&quot;display: block;&quot;&gt;



		&lt;div class=&quot;popup&quot;&gt;

			&lt;div class=&quot;content&quot;&gt;

				&lt;ul&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.myspace.com/Modules/PostTo/Pages/?u=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;t=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Myspace&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://digg.com/submit?phase=2&amp;amp;url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;bodytext=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Digg&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://reddit.com/submit?url=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.google.com/bookmarks/mark?op=edit&amp;amp;bkmk=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;annotation=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Google Bookmarks&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://news.ycombinator.com/submitlink?u=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;t=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;HackerNews&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://reporter.es.msn.com/?fn=contribute&amp;amp;Title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;URL=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;cat_id=6&amp;amp;tag_id=31&amp;amp;Remark=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;MSNReporter&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://sphinn.com/index.php?c=post&amp;amp;m=submit&amp;amp;link=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Sphinn&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://posterous.com/share?linkto=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;title=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;selection=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Posterous&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;width: 16px;&quot;&gt;&lt;a class=&quot;option1_16&quot; href=&quot;http://www.tumblr.com/share?v=3&amp;amp;u=http%3A%2F%2Fwww.lorenzobettini.it%2F2017%2F11%2Fhow-to-add-eclipse-launcher-in-gnome-dock%2F&amp;amp;t=How%20to%20add%20Eclipse%20launcher%20in%20Gnome%20dock&amp;amp;s=In%20this%20post%20I%27ll%20show%20how%20to%20add%20an%20Eclipse%20launcher%20as%20a%20favorite%20%28pinned%29%20application%20in%20the%20Gnome%20dock%20%28I%27m%20using%20Ubuntu%20Artful%29.%20This%20post%20is%20inspired%20by%C2%A0http%3A%2F%2Fblog.ttoine.net%2Fen%2F2016%2F06%2F30%2Fhow-to-add-eclipse-neon-launcher-in-gnu-linux-menus-a&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot; title=&quot;Tumblr&quot;&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;			

			&lt;/div&gt;        

		  &lt;a class=&quot;close&quot; style=&quot;cursor: pointer;&quot;&gt;

		  &lt;img src=&quot;http://www.lorenzobettini.it/wp-content/plugins/sociable/images/closelabel.png&quot; title=&quot;close&quot; /&gt;

		  &lt;/a&gt;

		&lt;/div&gt;

	&lt;/div&gt; 

  &lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;sociable&quot; style=&quot;float: none;&quot;&gt;&lt;ul class=&quot;clearfix&quot;&gt;&lt;li id=&quot;Twitter_Counter&quot;&gt;&lt;a class=&quot;twitter-share-button&quot; href=&quot;https://twitter.com/share&quot;&gt;Tweet&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;Facebook_Counter&quot;&gt;&lt;/li&gt;&lt;li id=&quot;Google_p&quot;&gt;&lt;/li&gt;&lt;li id=&quot;LinkedIn_Counter&quot;&gt;&lt;/li&gt;&lt;li id=&quot;StumbleUpon_Counter&quot;&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 07 Nov 2017 13:00:55 +0000</pubDate>
</item>
<item>
	<title>Fabio Zadrozny: Macro keyboard recording on Eclipse / LiClipse 4.3.1</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7855001383687474475.post-8837703511195115412</guid>
	<link>http://liclipse.blogspot.com/2017/11/macro-keyboard-recording-on-eclipse.html</link>
	<description>&lt;div style=&quot;text-align: justify;&quot;&gt;I'm currently working on a new engine for record and playback of&lt;b&gt; keyboard macros in Eclipse&lt;/b&gt;. It's currently available as a project in the Eclipse incubation (see &lt;a href=&quot;https://wiki.eclipse.org/E4/Macros&quot;&gt;https://wiki.eclipse.org/E4/Macros&lt;/a&gt; for more details and how to install it to Eclipse) and I hope it'll be a part of Eclipse 4.8 -- the current version should be stable already, but it needs some hardening, so, feedback is appreciated ;)&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Also, I decided to integrate it into &lt;a href=&quot;http://www.liclipse.com/&quot;&gt;LiClipse&lt;/a&gt; too (so, the new 4.3.1 release of LiClipse adds support to record and playback of macros).&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;The idea is that this will fix a long standing (and popular) feature request in Eclipse -- &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=8519&quot;&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=8519&lt;/a&gt; -- and a pet peeve on mine too as it's not uncommon for me to copy a file to notepad++ to make a record/playback and then copy it back to Eclipse... this really should be builtin (as a note, the rectangular edition in Eclipse, &lt;a href=&quot;http://www.liclipse.com/multi_edition_video.html&quot;&gt;multiple cursors in LiClipse&lt;/a&gt;  and regexps in the find dialog do solve a number of use-cases, but I find that record/playback on some cases is invaluable).&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Now, why not just use &lt;a href=&quot;https://sourceforge.net/projects/practicalmacro/&quot;&gt;https://sourceforge.net/projects/practicalmacro/&lt;/a&gt;? Well, I've used it some times but unfortunately I didn't find it as stable as I wanted -- it's really hard to come up with a stable record of what's happening in Eclipse -- so, I think an effective solution must really be builtin to Eclipse in order to be effective.&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Also, in order to be feasible, there are some limitations in the scope on what it should accomplish: it's not a general Eclipse IDE record/playback, but rather a &lt;b&gt;record/playback in the scope of an editor&lt;/b&gt;, so, it should properly record/playback the keystrokes in the editor and the resulting actions from such commands (although the implementation is done in a way which could support more general recording in Eclipse, but this would require changing many other parts of the IDE to be aware of the macro record/playback, so, I'm not sure it'd be feasible).&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;This means that some particular implementations which don't work through commands will have to be adapted -- so, for instance, record in the find dialog currently doesn't work because it doesn't work through commands and there's no way to listen that a find action was actually triggered from there... right now, the workaround is using the &lt;b&gt;Incremental Find (Ctrl+J)&lt;/b&gt; and &lt;b&gt;Find Next (Ctrl+K)&lt;/b&gt; commands when on record mode (my idea is taking a look at it after the macro record/playback engine is integrated to core Eclipse as I don't think it's a blocker due to having a proper workaround through actual commands), the focus now is making it solid for record and playback of commands which are related to the text editor.&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;So, that's it, hope you enjoy macro recording on &lt;a href=&quot;http://www.liclipse.com/download.html&quot;&gt;LiClipse 4.3.1&lt;/a&gt; -- and hopefully on Eclipse itself later on ;)&lt;/div&gt;</description>
	<pubDate>Tue, 07 Nov 2017 12:21:46 +0000</pubDate>
	<author>noreply@blogger.com (Fabio Zadrozny)</author>
</item>
<item>
	<title>JBoss Tools Team: JBoss Tools and Red Hat Developer Studio for Eclipse Oxygen.1a</title>
	<guid isPermaLink="true">https://tools.jboss.org/blog/11.1.0.ga-for-oxygen.1a.html</guid>
	<link>https://tools.jboss.org/blog/11.1.0.ga-for-oxygen.1a.html</link>
	<description>&lt;div&gt;&lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://tools.jboss.org/downloads/jbosstools/oxygen/4.5.1.Final.html&quot;&gt;JBoss Tools 4.5.1&lt;/a&gt; and &lt;a href=&quot;https://tools.jboss.org/downloads/devstudio/oxygen/11.1.0.GA.html&quot;&gt;Red Hat JBoss Developer Studio 11.1&lt;/a&gt; for Eclipse Oxygen.1a are here waiting for you. Check it out!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;devstudio11&quot; src=&quot;https://tools.jboss.org/blog/images/devstudio11.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;installation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#installation&quot;&gt;&lt;/a&gt;Installation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Developer Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href=&quot;https://www.jboss.org/products/devstudio.html&quot;&gt;JBoss Products page&lt;/a&gt; and run it like this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;java -jar jboss-devstudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) JBoss Developer Studio require a bit more:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release requires at least Eclipse 4.7 (Oxygen) but we recommend
      using the latest &lt;a href=&quot;http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/oxygen1a&quot;&gt;Eclipse 4.7.1a Oxygen JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &quot;JBoss Tools&quot; or &quot;Red Hat JBoss Developer Studio&quot;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;literalblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;http://download.jboss.org/jbosstools/oxygen/stable/updates/&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-new&quot;&gt;&lt;/a&gt;What is new?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our main focus for this release was on adoption of Java9, improvements for container based development and bug fixing.
      Eclipse Oxygen itself has &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaTM66CahSlkMh5YkndYXMUq&quot;&gt;a lot of new cool stuff&lt;/a&gt; but let me highlight just a few updates in both Eclipse Oxygen and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;openshift-3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift-3&quot;&gt;&lt;/a&gt;OpenShift 3&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;cdk-3-2-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#cdk-3-2-server-adapter&quot;&gt;&lt;/a&gt;CDK 3.2 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new server adapter has been added to support the next generation of CDK 3.2.
      While the server adapter itself has limited functionality, it is able to start and stop the CDK virtual machine via its minishift binary.
      Simply hit Ctrl+3 (Cmd+3 on OSX) and type CDK, that will bring up a command to setup and/or launch the CDK server adapter.
      You should see the old CDK 2 server adapter along with the new CDK 3 one (labeled &lt;strong&gt;Red Hat Container Development Kit 3.2+&lt;/strong&gt; ).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All you have to do is set the credentials for your Red Hat account, the location of the CDK’s minishift binary file, the type of virtualization hypervisor
      and an optional CDK profile name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once you’re finished, a new CDK Server adapter will then be created and visible in the Servers view.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter2&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter2.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the server is started, Docker and OpenShift connections should appear in their respective views, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly-replicatable environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter3&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter3.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;cdk3.2 server adapter4&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/cdk3.2-server-adapter4.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;new-command-to-tune-resource-limits&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#new-command-to-tune-resource-limits&quot;&gt;&lt;/a&gt;New command to tune resource limits&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new command has been added to tune resource limits (CPU, memory) on an OpenShift deployment.
      It’s available for a Service, a DeploymentConfig, a ReplicationController or a Pod.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To activate it, go the the OpenShift explorer, select the OpenShift resource, right click and select &lt;code&gt;Edit resource limits&lt;/code&gt;.
      The following dialog will show up:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit resource limits&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-resource-limits.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;After you changed the resource limits for this deployment, it will be updated and new pods will be spawned (not for ReplicationController)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit resource limits1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-resource-limits1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;discover-docker-registry-url-for-openshift-connections&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#discover-docker-registry-url-for-openshift-connections&quot;&gt;&lt;/a&gt;Discover Docker registry URL for OpenShift connections&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When an OpenShift connection is created, the Docker registry URL is empty. When the CDK is started through the CDK server adapter, an OpenShift
      connection is created or updated if a matching OpenShift connection is found. But what if you have several OpenShift connections, the remaining ones
      will be left with the empty URL.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find the matching Docker registry URL when editing the OpenShift connection through the &lt;code&gt;Discover&lt;/code&gt; button:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit connection discover&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-connection-discover.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Click on the &lt;code&gt;Discover&lt;/code&gt; button and the Docker registry URL will be filled if a matching started CDK server adapter is found:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;edit connection discover1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/edit-connection-discover1.png&quot; width=&quot;600&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;openshift-io-login&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#openshift-io-login&quot;&gt;&lt;/a&gt;OpenShift.io login&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is possible to login from JBoss Tools to OpenShift.io. A single account will be maintained per workspace. Once you initially logged onto OpenShift.io, all
      needed account information (tokens,…​) will be stored securely.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There are two ways to login onto OpenShift.io:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;through the UI&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;via a third party service that will invoke the proper extension point&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;ui-based-login-to-openshift-io&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#ui-based-login-to-openshift-io&quot;&gt;&lt;/a&gt;UI based login to OpenShift.io&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the toobar, you should see a new icon &lt;span class=&quot;image&quot;&gt;&lt;img alt=&quot;Toolbar&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-16x16.png&quot; /&gt;&lt;/span&gt;. Click on it and it will launch the login.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If this is the first time you login to OpenShift.io or if you OpenShift.io account tokens are not valid anymore, you should see a browser launched with the following content:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio browser&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-browser.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enter your RHDP login and the browser will then auto-close and an extract (for security reasons) of the OpenShift.io token will be displayed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio token dialog&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-token-dialog.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This dialog will be also shown if an OpenShift.io account was configured in the workspace and the account information is valid.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;via-extension-point&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#via-extension-point&quot;&gt;&lt;/a&gt;Via extension point&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The OpenShift.io integration can be invoked by a third party service through the &lt;code&gt;org.jboss.tools.openshift.io.code.tokenProvider&lt;/code&gt; extension point.
      This extension point will perform the same actions as the UI but basically will return an access token for OpenShift.io to the third party service.
      A detailed explanation of how to use this extension point is described here: &lt;a href=&quot;https://github.com/jbosstools/jbosstools-openshift/wiki/OpenShift.io-token-provider&quot;&gt;Wiki page&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can display the account information using the Eclipse &lt;code&gt;Jboss Tools → OpenShift.io&lt;/code&gt; preference node. If you workspace does not contain an OpenShift.io account yet, you should see the following:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio preferences&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-preferences.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you have a configured OpenShift.io account, you should see this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;osio preferences1&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/openshift/images/osio-preferences1.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;server-tools&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#server-tools&quot;&gt;&lt;/a&gt;Server tools&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;eap-7-1-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#eap-7-1-server-adapter&quot;&gt;&lt;/a&gt;EAP 7.1 Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A server adapter has been added to work with EAP 7.1 and Wildfly 11. It’s based on WildFly 11. This new server adapter includes support for incremental management
      deployment like it’s upstream WildFly 11 counterpart.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;fuse-tooling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#fuse-tooling&quot;&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;global-beans-improve-support-for-bean-references&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#global-beans-improve-support-for-bean-references&quot;&gt;&lt;/a&gt;Global Beans: improve support for Bean references&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to set Bean references from User Interface when creating a new Bean:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Create Factory Bean Reference&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/factoryBeanReference.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Editing Bean references is also now available on the properties view when editing an existing Bean:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Edit Factory Bean Reference&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/factoryBeanReference-propertiesView.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additional validation has been added to help users avoid mixing Beans defined with class names and Beans defined referencing other beans.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;apache-karaf-4-x-server-adapter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#apache-karaf-4-x-server-adapter&quot;&gt;&lt;/a&gt;Apache Karaf 4.x Server Adapter&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are happy to announce the addition of new Apache Karaf server adapters. You can now download and install Apache Karaf 4.0 and 4.1 from within your development environment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Apache Karaf 4x Server Adapters&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/karaf4xadapters.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;switch-apache-camel-version&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#switch-apache-camel-version&quot;&gt;&lt;/a&gt;Switch Apache Camel Version&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now change the Apache Camel version used in your project. To do that you invoke the context menu of the project in the project explorer and navigate into the &lt;code&gt;Configure&lt;/code&gt; menu. There you will find the menu entry called &lt;code&gt;Change Camel Version&lt;/code&gt; which
      will guide you through this process.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Switch Camel Version&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/switchcamelversion.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;improved-validation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#improved-validation&quot;&gt;&lt;/a&gt;Improved Validation&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The validation in the editor has been improved to find containers which lack mandatory child elements. (for instance a Choice without a child element)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;Improved validation&quot; src=&quot;https://tools.jboss.org/documentation/whatsnew/fusetools/images/containerchildvalidation.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;java-developement-tools-jdt&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#java-developement-tools-jdt&quot;&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-java-9&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#support-for-java-9&quot;&gt;&lt;/a&gt;Support for Java™ 9&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Java™ 9 is here, and JDT fully supports it:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The Eclipse compiler for Java (ECJ) implements all the new Java 9 language enhancements&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Updated significant features to support Java Modules, such as compiler, search and many editor features.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is not mandatory to run Eclipse with Java Runtime 9 to get the Java 9 support. However, a Java runtime 9
      is required to be on a project’s build path to compile a modular project against the system modules.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;When a Java Runtime 9 is added to a project’s build path, the system modules are listed under the System library in the package explorer&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;java9 package explorer&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/java9-package-explorer.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;An existing non-modular Java project can be quickly converted to a module by creating a module-info.java for that project.
      This feature can be availed once the project has been moved to compliance 9&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;java9 create module&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/java9-create-module.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;With Java 9 support, a library or a container can now be added to the module path as opposed to the classpath&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;java9 module path&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/java9-module-path.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Once a module has been added to a project’s module path, its encapsulation properties can further be modified by clicking on the &lt;strong&gt;Is Modular&lt;/strong&gt; option
      and editing the Module properties. The following example shows how module module.one can can be made to export its packages in the context of the current Java project&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;java9 module properties&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/java9-module-properties.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Java search now includes a new search scope - Module&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;java9 module search&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/java9-module-search.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;support-for-junit-5&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#support-for-junit-5&quot;&gt;&lt;/a&gt;Support for JUnit 5&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;JUnit 5 support is now available in Eclipse.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Create a new JUnit Jupiter test via *New JUnit Test Case wizard:&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;new junit jupiter test&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/new-junit-jupiter-test.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Add JUnit 5 library to the build path&lt;/p&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;New JUnit Test Case wizard offers to add it while creating a new JUnit Jupiter test&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;add junit 5 lib&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/add-junit-5-lib.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Quick Fix &lt;strong&gt;(Ctrl+1)&lt;/strong&gt; proposal on &lt;strong&gt;@Test&lt;/strong&gt;, &lt;strong&gt;@TestFactory&lt;/strong&gt;, &lt;strong&gt;@ParameterizedTest&lt;/strong&gt; and &lt;strong&gt;@RepeatedTest&lt;/strong&gt; annotations&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;add junit 5 lib quick fix&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/add-junit-5-lib-quick-fix.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Add JUnit library in Java Build Path dialog&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;add junit 5 lib java build path&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/add-junit-5-lib-java-build-path.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Create a JUnit Jupiter test method with the new &lt;strong&gt;test_jupiter&lt;/strong&gt; template&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;junit jupiter test method template&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/junit-jupiter-test-method-template.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Create a &lt;strong&gt;@TestFactory&lt;/strong&gt; method with the new &lt;strong&gt;test_factory&lt;/strong&gt; template&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;junit jupiter test factory template&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/junit-jupiter-test-factory-template.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;JUnit Jupiter’s &lt;strong&gt;Assertions&lt;/strong&gt;, &lt;strong&gt;Assumptions&lt;/strong&gt;, &lt;strong&gt;DynamicContainer&lt;/strong&gt; and &lt;strong&gt;DynamicTest&lt;/strong&gt; classes are now added to &lt;strong&gt;Eclipse Favorites&lt;/strong&gt; by default&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;content assist favorites&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/content-assist-favorites.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This allows you to quickly import the static methods from these classes in your code via Content Assist &lt;strong&gt;(Ctrl + Space)&lt;/strong&gt; and Quick Fix &lt;strong&gt;(Ctrl + 1)&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;View all the failures from grouped assertions in the same &lt;strong&gt;Result Comparison&lt;/strong&gt; dialog opened from JUnit view&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;grouped assertions result comparison&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/grouped-assertions-result-comparison.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;View the number of disabled tests and tests with assumption failures on hover in JUnit view&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;skipped tests&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/skipped-tests.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Use &lt;strong&gt;Go to File&lt;/strong&gt; action or just double-click to navigate to the test from JUnit view even when the test is displayed with a custom name&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;display name&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/display-name.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;(Re-)Run a single &lt;strong&gt;@Nested&lt;/strong&gt; test class by using the &lt;strong&gt;Run&lt;/strong&gt; action in JUnit view or Outline view. You can even right-click on a nested test class name in the editor and use the &lt;strong&gt;Run As&lt;/strong&gt; action&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;run nested class&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/run-nested-class.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The &lt;strong&gt;Test Method Selection&lt;/strong&gt; dialog in JUnit launch configuration now shows the method parameter types also&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;test method selection dialog&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/test-method-selection-dialog.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;You can provide tags to be included in or excluded from a test run in the &lt;strong&gt;Configure Tags&lt;/strong&gt; dialog of JUnit launch configuration&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;junit tags&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/junit-tags.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;admonitionblock note&quot;&gt;
      &lt;table&gt;
      &lt;tbody&gt;&lt;tr&gt;
      &lt;td class=&quot;icon&quot;&gt;
      &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
      &lt;td class=&quot;content&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;If you are using an Eclipse workspace where you were running your JUnit 5 tests via @RunWith(JUnitPlatform.class) in Eclipse without JUnit 5 support then you
      will have JUnit 4 as the test runner in their launch configurations. Before executing these tests in Eclipse with JUnit 5 support, you should either change their test
      runner to JUnit 5 or delete them so that new launch configurations are created with JUnit 5 test runner while running the tests&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;img alt=&quot;test runner update&quot; src=&quot;https://www.eclipse.org/eclipse/news/4.7.1a/images/test-runner-update.png&quot; /&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We do not support running tests in a setup where an old Eclipse build (not having JUnit 5 support) is using a new Eclipse build (having JUnit 5 support)
      as target. Also, developers who have the JDT JUnit runtime bundles (org.eclipse.jdt.junit.runtime, org.eclipse.jdt.junit4.runtime) checked out and pull
      the latest changes will run into the above issue. You are expected to use a new Eclipse build for the development.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;and-more&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#and-more&quot;&gt;&lt;/a&gt;And more…​&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.5.1.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;what-is-next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;http://tools.jboss.org/blog/news.atom#what-is-next&quot;&gt;&lt;/a&gt;What is next?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Having JBoss Tools 4.5.1 and Developer Studio 11.1 out we are already working on the next maintenance release for Eclipse Oxygen.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Jeff Maury&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 06 Nov 2017 11:31:13 +0000</pubDate>
</item>
<item>
	<title>Cedric Brun: ⦏Breaking News Eclipse Sirius⦎ SiriusCon 2017!</title>
	<guid isPermaLink="false">http://cedric.brun.io/eclipse/a-special-siriuscon</guid>
	<link>http://cedric.brun.io/eclipse/a-special-siriuscon/</link>
	<description>&lt;p&gt;SiriusCon 2017 has never been so close! The third edition of this conference will take place this Thursday, the 9th of November in the beautiful Paris! A whole day of exclusive content: presentations with a specific focus on Eclipse Sirius itself, others about companion technologies and feedback from users who used these technologies to build their custom tools! This year these tools are covering activities ranging from the Risk Analysis in Industry Supply Chains to the design and management of REST API for an enterprise information system. One can learn a lot from the experiences of the others and I’m often amazed at the tools which are getting built.&lt;/p&gt;

&lt;p&gt;We’ll start the day with a keynote by &lt;a href=&quot;http://mmilinkov.wordpress.com/&quot;&gt;Mike Milinkovich&lt;/a&gt;, the executive director of the Eclipse Foundation. It’s an honor to host such an important actor in the Open-Source movement, he has a unique perspective regarding what happened in the Software Industry the last decade and how Open-Source enabled worldwide collaborations. This keynote is especially relevant for such a conference as Sirius is part of a rich ecosystem of technologies, products and companies and is an integral part of the Eclipse world.&lt;/p&gt;

&lt;p&gt;The event also features talks with a particular focus: document generation from models, simulation and animation, diagram layouting, using Xtext and Sirius or learning how to smooth the user experience of your graphical modeler. Last but not least, tutorials during the afternoon to either discover or sharpen your skills! Find out &lt;a href=&quot;https://www.siriuscon.org/#program&quot;&gt;the complete program&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Content is one thing, but we are also organizing the event so that you will enjoy a nice time in a friendly atmosphere. This is the occasion to get in touch with the team, chat with other users, directly provide your feedback or get some direct help with the clinic. We’ll also prepare a showcase area to demonstrate tools and technologies, both for beginners and advanced users. Do yourself a favor and do not hesitate to reach out to people here.&lt;/p&gt;

&lt;p&gt;You get exclusive content at SiriusCon, insights you can’t find anywhere else, sharp details about the technology, its  use and deployment and its direction, and you also get to enjoy lively chats in a delightful place, right next to the Montparnasse train station (at the Novotel Paris Vaugirard). The event is free but the room is limited, make sure to register soon!&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;http://cedric.brun.io/images/blog/siriuscon/2017.png&quot;&gt;&lt;img src=&quot;http://cedric.brun.io/images/blog/siriuscon/2017.png&quot; /&gt;&lt;/a&gt;    
    
&lt;/figure&gt;


    &lt;p&gt;&lt;a href=&quot;http://cedric.brun.io/eclipse/a-special-siriuscon/&quot;&gt;⦏Breaking News Eclipse Sirius⦎ SiriusCon 2017!&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;http://cedric.brun.io&quot;&gt;&lt;s&gt;CTO&lt;/s&gt; CEO @ Obeo&amp;lt;/a&amp;gt; on November 06, 2017.&amp;lt;/p&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Nikhil Nanivadekar: UnifiedMap: How it works?</title>
	<guid isPermaLink="false">https://medium.com/p/48af0b80cb37</guid>
	<link>https://medium.com/oracledevs/unifiedmap-how-it-works-48af0b80cb37?source=rss-4285d8a2ca86------2</link>
	<description>&lt;p&gt;&lt;strong&gt;UnifiedMap: How it works?&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*bh4KolrG0MLQhpM7c70T4g.jpeg&quot; /&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; comes with it’s own implementations of &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/impl/list/mutable/FastList.html&quot;&gt;List&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/impl/set/mutable/UnifiedSet.html&quot;&gt;Set&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/impl/map/mutable/UnifiedMap.html&quot;&gt;Map&lt;/a&gt;. It also has additional data structures like &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/api/multimap/Multimap.html&quot;&gt;Multimap&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/api/bag/Bag.html&quot;&gt;Bag&lt;/a&gt; and an entire Primitive Collections hierarchy. In this blog we will take a look under the hood of UnifiedMap.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;UnifiedMap&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java&quot;&gt;UnifiedMap&lt;/a&gt; is the Map implementation of Eclipse Collections and is implemented very differently than a JDK HashMap.&lt;/p&gt;&lt;p&gt;java.util.HashMap is backed by a table of Entry objects. The Entry implementation in HashMap has hashcode, key, value, next as members, HashMap essentially caches the hashcode of keys.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/534/1*OBgIWkcpBfhnely56N2VIw.png&quot; /&gt;UnifiedMap schematic&lt;/figure&gt;&lt;p&gt;A UnifiedMap is backed by an array where keys and values occupy alternate slots in the array :protected transient Object[] table . The flattened array structure stores only the keys and values there by creating a leaner Map implementation with reduced memory footprint. Added benefit of having keys and values in consecutive slots is improved cache locality.&lt;/p&gt;&lt;p&gt;Collisions in the main array are handled by putting a special object called CHAINED_KEY in key slot. The value slot of CHAINED_KEY (slot after CHAINED_KEY slot) contains another Object[] array similar to main array called CHAINED_OBJECT with keys and values in alternate slots.&lt;/p&gt;&lt;p&gt;Look ups in UnifiedMap use a standard &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java#L316&quot;&gt;hashcode index algorithm&lt;/a&gt; to find the location of a key in the array. If a key is &lt;em&gt;not&lt;/em&gt; a CHAINED_KEY then the next slot contains the value. If a key &lt;em&gt;is&lt;/em&gt; a CHAINED_KEY then the CHAINED_OBJECT is evaluated linearly to find the required key and the next slot in CHAINED_OBJECT contains the value.&lt;/p&gt;&lt;p&gt;Since UnifiedMap does not cache the hashcode, for each look up, hashcode needs to be computed. So, the performance of UnifiedMap is directly dependent on the hashcode implementation of the key.&lt;/p&gt;&lt;p&gt;Below are a few memory and performance comparisons between JDK 1.8 HashMap and Eclipse Collections 9.0.0 UnifiedMap.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Memory Footprint (lower number the better)&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/867/1*5DEXbbY78-iRqVRe1cSRgQ.png&quot; /&gt;Memory Comparison HashMap&amp;lt;Integer, Integer&amp;gt; vs UnifiedMap&amp;lt;Integer, Integer&amp;gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/868/1*Kaxziu1rgItiKMXXXScscw.png&quot; /&gt;Memory Comparison HashMap&amp;lt;String, String&amp;gt; vs UnifiedMap&amp;lt;String, String&amp;gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Performance Tests (higher number the better)&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/979/1*w8PsAkdSSdG183yzxc2GNg.png&quot; /&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/230/1*zueMnXtSqBmGK3p44fdnUA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;Source code for memory tests and performance tests is available on &lt;a href=&quot;https://github.com/nikhilnanivadekar/MemoryPerformanceTest&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt; Eclipse Collections UnifiedMap has ~50% smaller memory footprint compared to JDK HashMap, but that comes with a minor performance implication.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Eclipse Collections is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like it star it.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=48af0b80cb37&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/unifiedmap-how-it-works-48af0b80cb37&quot;&gt;UnifiedMap: How it works?&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Sun, 05 Nov 2017 15:14:11 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Eclipse DemoCamp Munich: Registration opens today</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=36234</guid>
	<link>https://eclipsesource.com/blogs/2017/11/03/eclipse-democamp-munich-registration-opens-today/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Eclipse Democamp Munich December 4th 2017 – Registration opens today!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We are pleased to invite you to participate in the Eclipse DemoCamp Munich 2017. The DemoCamp Munich is one the biggest DemoCamps worldwide and therefore an excellent opportunity to showcase all the cool, new and interesting technology being built by the Eclipse community. This event is open to Eclipse enthusiasts who want to show demos of what they are doing with Eclipse.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.eventbrite.de/e/eclipse-democamp-december-2017-tickets-38379630508&quot;&gt;&lt;b&gt;Registration&lt;/b&gt;&lt;/a&gt;&lt;b&gt; will open today, November 6th at 2.30 pm&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Please click &lt;/span&gt;&lt;a href=&quot;https://www.eventbrite.de/e/eclipse-democamp-december-2017-tickets-38379630508&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;here for detailed information and the registration&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Seating is limited, so please register soon if you plan to attend.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We look forward to welcoming you to the Eclipse DemoCamp 2017!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;IMPORTANT NOTE&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;The last DemoCamps have always been sold out. Due to legal reasons, we have a fixed limit for the room and cannot overbook. However, every year some places unfortunately remain empty. Please unregister if you find you are unable to attend so we can invite participants from the waiting list. If you are not attending and have not unregistered, we kindly ask for a donation of 10 Euros to “Friends of Eclipse”. Thank you in advance for your understanding!&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If the event is sold out, you will be placed on the waiting list. You will be informed if a place becomes available, and you will need to confirm your attendance after we contact you.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you are interested in giving a talk, please send your presentation proposal to munich@eclipsesource.com for consideration. There are always more proposals than slots in the agenda, so we will make a selection from the submissions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2017/11/03/eclipse-democamp-munich-registration-opens-today/&quot; rel=&quot;nofollow&quot;&gt;Eclipse DemoCamp Munich: Registration opens today&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Fri, 03 Nov 2017 15:20:46 +0000</pubDate>
</item>
<item>
	<title>Kichwa Coders: The language server protocol will revolutionize how you code</title>
	<guid isPermaLink="false">http://kichwacoders.com/?p=3063</guid>
	<link>https://kichwacoders.com/2017/11/03/the-language-server-protocol-will-revolutionize-how-you-code/</link>
	<description>&lt;p&gt;&lt;img alt=&quot;lsps&quot; class=&quot;alignnone size-full wp-image-3073&quot; src=&quot;https://kichwacoders.files.wordpress.com/2017/11/lsps.png?w=525&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The next generation Spring Boot tooling has been completely refactored to be based on the &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol/blob/master/README.md&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;language server protocol&lt;/a&gt; (LSP). The tooling covers things like code assist for the Spring Boot property file, support for Cloud Foundry manifest files as well as Spring Boot support for Java files with typical features such as validation, content-assist and quick-fixes.&lt;/p&gt;
&lt;h2&gt;Beyond IDEs&lt;/h2&gt;
&lt;p&gt;&lt;span id=&quot;more-3063&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This new generation of Spring tools, Spring Tools 4, will be &lt;a href=&quot;https://springoneplatform.io/sessions/spring-tools-4-eclipse-and-beyond&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;fully unveiled at the SpringOne Platform conference later this year&lt;/a&gt;. Traditionally Spring tooling was written in Java as Eclipse plugins and could not be reused in other developer environments. The language server protocol enables Spring tooling to go beyond Eclipse and provide similarly great user experiences for Atom and Visual Studio Code, and likely any platform which implement language server clients. The &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol/wiki/Tools-supporting-the-Language-Server-Protocol&quot;&gt;list of clients&lt;/a&gt; supporting LSP is growing fast, even with Vi and emacs featuring it on their road-maps. In fact, the notable exception is IntelliJ. The market leader already has a well established language extension framework and the resources to keep up with language changes. It will be intriguing to see when and if they jump on the bandwagon and acknowledge the users &lt;a href=&quot;https://youtrack.jetbrains.com/issue/IDEABKL-7409&quot;&gt;banging the door down&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Every Programming Language that Matters&lt;/h2&gt;
&lt;p&gt;On the server side the number of protocol implementations is &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol/wiki/Protocol-Implementations&quot;&gt;growing fast&lt;/a&gt;. There were 27 implementations back in June, my current count stands at 46. LSP easily makes sense for newer modern languages such as Typescript and Go, not to mention any domain-specific language. When it comes to languages with great IDE support such as Java, LSP is a big step back in functionality. However this could change quickly as the &lt;a href=&quot;https://www.infoq.com/news/2017/09/Java6Month&quot;&gt;pace of Java releases quickens&lt;/a&gt;. Even for C/C++, LSP presents a chance to start afresh with &lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/2017/april/article5.php&quot;&gt;a new approach&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;LSP: The Good, Bad &amp;amp; Ugly&lt;/h2&gt;
&lt;p&gt;At EclipseCon Europe, &lt;a href=&quot;https://twitter.com/martinlippert&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Martin Lippert&lt;/a&gt; spoke about Pivotal’s journey to get Spring tooling to this stage and the &lt;a href=&quot;https://www.eclipsecon.org/europe2017/session/implementing-language-servers-good-bad-ugly&quot;&gt;good, bad and ugly of language server protocols&lt;/a&gt;. Here are some of the highlights of his insights.&lt;/p&gt;
&lt;h4&gt;Good: Write once, run everywhere&lt;/h4&gt;
&lt;p&gt;It is a no-brainer for toolsmiths to switch to something which enables them to creating tooling just once and make it readily available across different tools.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;building lightweight tooling (separation of client/server)&lt;/li&gt;
&lt;li&gt;the freedom of starting fresh&lt;/li&gt;
&lt;li&gt;building the tooling once and reusing it across various environments&lt;/li&gt;
&lt;li&gt;isolated testing&lt;/li&gt;
&lt;li&gt;writing tools in the language most suited to the job&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Bad: More features, better integration?&lt;/h4&gt;
&lt;p&gt;LSP covers many language features but is not feature-rich. Syntax highlighting is not included though readily handled by Textmate grammars. Other features such as &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol/issues/61&quot;&gt;advanced refactoring&lt;/a&gt; should fall within the remit of LSP so hopefully this will only  be a matter of time.&lt;/p&gt;
&lt;p&gt;Additionally there is no communication between language servers. If the Spring language tooling provides completions for Java in a property file, will it be able to reuse an existing Java LSP or does it have to launch its own and redo all the indexing and parsing work?  As things scale this will be interesting to see how interactions between language servers can best be handled.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4&gt;Ugly: More protocol please&lt;/h4&gt;
&lt;p&gt;The protocol itself isn’t quite enough of a protocol and still leaves room for interpretation. Which means the promise of client-agnostic language servers doesn’t fully exist yet. Currently each client behaves differently. For example each client has its own way to start a server and define an extension. Additionally every client is different, which for now means feature flags per client to work around issues, for example, for magic indentation on multi-line code completion (VS Code client indents using its own rules, Atom defers to the language server). Having more standardization on client implementation specifics and things like a client registry would make all the difference here.&lt;/p&gt;
&lt;h2&gt;Language Server Protocol is the future of language tooling&lt;/h2&gt;
&lt;p&gt;What Martin’s talk and the Spring tooling underlines is that there is no longer much debate about whether LSP is the future of language tooling. Now the conversation has shifted to what’s missing and how do we improve it. Developer communities and toolsmiths are restructuring to work together, be more effective and as a result revolutionize the landscape of our language tooling options.&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kichwacoders.wordpress.com/3063/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kichwacoders.wordpress.com/3063/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kichwacoders.com&amp;amp;blog=68353182&amp;amp;post=3063&amp;amp;subd=kichwacoders&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 03 Nov 2017 12:26:50 +0000</pubDate>
</item>
<item>
	<title>Benjamin Cabe: Enter the Open IoT Challenge 4.0: some ideas for your submission</title>
	<guid isPermaLink="false">https://blog.benjamin-cabe.com/?p=2969</guid>
	<link>http://feedproxy.google.com/~r/benjamin-cabe-planet-eclipse/~3/RsiTCX4Xi9E/enter-open-iot-challenge-4-0-some-ideas-for-your-submission</link>
	<description>&lt;p&gt;There are only a couple weeks left (deadline is Nov. 13) for entering the fourth edition of our &lt;a href=&quot;https://iot.eclipse.org/open-iot-challenge/&quot;&gt;&lt;strong&gt;Open IoT Challenge&lt;/strong&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The Open IoT Challenge encourages IoT enthusiasts and developers to build innovative solutions for the Internet of Things using open standards and open source technology.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Open IoT Challenge 4.0&quot; class=&quot;aligncenter wp-image-2975 size-full&quot; height=&quot;283&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/11/challenge4.png&quot; width=&quot;1024&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You probably remember &lt;a href=&quot;https://iot.eclipse.org/open-iot-challenge/third-edition/&quot; rel=&quot;noopener&quot;&gt;last year’s edition&lt;/a&gt; and its winner, Sébastien Lambour, who built an amazing solution: &lt;strong&gt;InTheMoodForLife.&lt;/strong&gt; The project aims at &lt;strong&gt;analyzing sleep patterns&lt;/strong&gt; to anticipate mood disorder episodes for people suffering from &lt;strong&gt;bipolar disorder&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Sébastien won $3,000, and we also provided him with an additional $1,000 to fund his participation in Eclipse IoT events where he presented his project. For example, Sébastien attended the Eclipse IoT Day in London, a couple months ago, and gave a brilliant talk where he shared his experience.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;As a reminder, there is already a nice incentive for you to enter the challenge, even if you feel like you can’t compete for the first place (and you shouldn’t feel like that, by the way!). In fact, &lt;strong&gt;if you are among the 10 best submissions, our jury will award you a $150 gift certificate&lt;/strong&gt; that will help you buy the hardware you need to build your project!&lt;/p&gt;
&lt;p&gt;I thought it would be useful to share some of the ideas I would like to see come to life, and some of the technologies that I think would be interesting to use.&lt;/p&gt;
&lt;h2&gt;Deep learning&lt;/h2&gt;
&lt;p&gt;With &lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-deeplearning4j&quot; rel=&quot;noopener&quot;&gt;Deeplearning4j moving to Eclipse,&lt;/a&gt; now is the perfect time to think of having &lt;strong&gt;deep learning&lt;/strong&gt; play a role in your project. Whether you plan on doing image recognition, predictive maintenance, or natural language processing, I am curious to see if &lt;a href=&quot;https://deeplearning4j.org/&quot; rel=&quot;noopener&quot;&gt;Deeplearning4j&lt;/a&gt;, or other open source projects in the machine learning / deep learning area, can help you implement your solution. There are some IoT gateways out there that are fairly capable, and even some that include a GPU, so please be crazy and push the boundaries of edge computing! &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.3/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Industrial IoT&lt;/h2&gt;
&lt;p&gt;Many – too many, probably – IoT solutions are very consumer oriented (connected toothbrush anyone?), so I certainly hope to see lots of projects that are more &lt;strong&gt;industry-focused&lt;/strong&gt;. Our &lt;a href=&quot;https://iot.eclipse.org/testbeds/production-performance-management/&quot; rel=&quot;noopener&quot;&gt;production performance management testbed&lt;/a&gt; can probably give you some pointers regarding open source projects that are applicable, and even provide you some &lt;a href=&quot;https://github.com/eclipselabs/eclipseiot-testbed-productionperformancemanagement&quot; rel=&quot;noopener&quot;&gt;code&lt;/a&gt; to get started.&lt;/p&gt;
&lt;h2&gt;Blockchain and distributed ledgers&lt;/h2&gt;
&lt;p&gt;Beyond the buzzword and the hype, &lt;strong&gt;blockchain&lt;/strong&gt; is still an interesting topic, which you may want to put to use in your Open IoT Challenge project.&lt;/p&gt;
&lt;p&gt;Security is one key aspect of IoT. Blockchain might be a way for you to secure communications or data exchanges, but it is also interesting to think about using distributed ledgers as a way to enable a sharing economy.&lt;/p&gt;
&lt;p&gt;What if you could “share” some of your IoT devices’ processing or networking power and get compensated, in a secure way, using a blockchain? And how about true “pay-per-use” scenarios, where e.g construction companies share a pool of high-value power tools for which actual usage is tracked, logged, and billed accordingly, through a blockchain?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/11/Iota_logo.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignright size-medium wp-image-2988&quot; height=&quot;101&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/11/Iota_logo-300x101.png&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;Of particular interest, in my opinion, is &lt;strong&gt;&lt;a href=&quot;https://iota.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;IOTA&lt;/a&gt;&lt;/strong&gt;, an open source distributed ledger which, by design, has no transaction fees (it has no miners, as the 2,779,530,283,277,761 (!) tokens that form the ‘tangle’ were all generated in the so-called genesis transaction).&lt;/p&gt;
&lt;p&gt;This means that you can leverage the IOTA tangle to implement secured micro-transactions in your IoT solution, e.g to expose (and monetize) sensor data to the world. I would be particularly curious to see how IOTA performs on constrained devices, and how well it scales.&lt;/p&gt;
&lt;h2&gt;Low-power, long-life&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/11/mangOH-Red-510x288.png&quot;&gt;&lt;img alt=&quot;MangOH Red&quot; class=&quot;alignright size-medium wp-image-2983&quot; height=&quot;201&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/11/mangOH-Red-510x288-300x201.png&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;One of our sponsors this year, Sierra Wireless, will be providing the 10 best proposals with a &lt;a href=&quot;http://mangoh.io/mangoh-red&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;MangOH Red&lt;/strong&gt;&lt;/a&gt; IoT board. This board is perfectly suited for low-power IoT applications and would be the ideal partner in crime if running for years out of a small battery is important to you.&lt;/p&gt;
&lt;p&gt;It is often an afterthought in IoT to think about the maintenance of the equipment. I am interested in seeing how your proposal will &lt;strong&gt;highlight how you plan on making your solution easy to operate&lt;/strong&gt;, including things like &lt;strong&gt;over-the-air updates&lt;/strong&gt;, &lt;strong&gt;energy consumption optimization&lt;/strong&gt;, etc.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If you are not sure if your idea would make for a cool project, feel free to &lt;a href=&quot;https://blog.benjamin-cabe.com/contact&quot;&gt;ping me&lt;/a&gt;, I will be happy to give you some feedback &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.3/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I am looking forward to reviewing your proposals, and seeing all the cool projects you will be building over the next few months!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://iot.eclipse.org/open-iot-challenge/&quot;&gt;&lt;img alt=&quot;Submit by Nov. 13 for the IoT Challenge&quot; class=&quot;aligncenter wp-image-2973 size-large&quot; height=&quot;254&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/11/challenge-submit-1024x548.png&quot; width=&quot;474&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And last but not least, big thanks to &lt;a href=&quot;http://www.bitreactive.com/&quot;&gt;Bitreactive&lt;/a&gt;, &lt;a href=&quot;https://www.contact-software.com/&quot;&gt;CONTACT Software&lt;/a&gt;, &lt;a href=&quot;http://www.eurotech.com/&quot;&gt;Eurotech&lt;/a&gt;, &lt;a href=&quot;https://software.intel.com/en-us/iot/home&quot;&gt;Intel&lt;/a&gt;, &lt;a href=&quot;https://www.redhat.com/&quot;&gt;Red Hat&lt;/a&gt;, and &lt;a href=&quot;https://www.sierrawireless.com/&quot;&gt;Sierra Wireless&lt;/a&gt; for sponsoring the Open IoT Challenge this year.&lt;/p&gt;
 &lt;p&gt;The post &lt;a href=&quot;https://blog.benjamin-cabe.com/2017/11/03/enter-open-iot-challenge-4-0-some-ideas-for-your-submission&quot; rel=&quot;nofollow&quot;&gt;Enter the Open IoT Challenge 4.0: some ideas for your submission&lt;/a&gt; appeared first on &lt;a href=&quot;https://blog.benjamin-cabe.com&quot; rel=&quot;nofollow&quot;&gt;Benjamin Cabé&lt;/a&gt;.&lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/benjamin-cabe-planet-eclipse/~4/RsiTCX4Xi9E&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 03 Nov 2017 09:34:40 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Save the date: Eclipse DemoCamp Munich on  4th of December 2017</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=35748</guid>
	<link>https://eclipsesource.com/blogs/2017/11/02/save-the-date-eclipse-democamp-munich-on-4th-of-december-2017/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We are pleased to invite you to participate to the Eclipse DemoCamp Munich 2017. Like in the past years, we continue in our tradition of hosting a “Christmas DemoCamp”. Please save the following date and mark your calendars on December 4th 2017 for the next Eclipse DemoCamp in Munich!  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We offer 80 seats, but we usually receive around 200 registrations. &lt;/span&gt;&lt;b&gt;To give everybody the same chance, registration for the event will start exactly on November 6th 2017 2pm.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;More details on the event and the possibility to register you will find &lt;a href=&quot;https://www.eventbrite.de/e/eclipse-democamp-december-2017-tickets-38379630508&quot;&gt;here&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you are interested in giving a talk, please send your presentation proposal to munich@eclipsesource.com for consideration. There are always more proposals than slots in the agenda, so we will make a selection from submitted proposals.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We are looking forward to your registration and seeing you in December!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2017/11/02/save-the-date-eclipse-democamp-munich-on-4th-of-december-2017/&quot; rel=&quot;nofollow&quot;&gt;Save the date: Eclipse DemoCamp Munich on  4th of December 2017&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 02 Nov 2017 19:31:35 +0000</pubDate>
</item>
<item>
	<title>Benjamin Cabe: 4 Takeaways from “All Things IoT” week at EclipseCon Europe</title>
	<guid isPermaLink="false">https://blog.benjamin-cabe.com/?p=2945</guid>
	<link>http://feedproxy.google.com/~r/benjamin-cabe-planet-eclipse/~3/vClHEGA6I8U/4-takeaways-from-all-things-iot-week-at-eclipsecon-europe</link>
	<description>&lt;p&gt;Last week, the Eclipse IoT community was pretty busy at EclipseCon Europe. We were having our largest Eclipse event of the year, and it featured lots of IoT.&lt;/p&gt;
&lt;p&gt;After a much needed weekend break to recover from an incredibly fruitful week, I am taking some time to write down some of my personal takeaways.&lt;/p&gt;
&lt;p&gt;Oh, and before you ask: we are working on uploading all the IoT sessions from the IoT Working Group meeting and IoT Day to YouTube. They will be available shortly, and as you can see in the blog post below, some of them already are! &lt;img alt=&quot;🙂&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/2.3/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;IoT Day featured lots of real-world talks&lt;/h2&gt;

&lt;a href=&quot;https://blog.benjamin-cabe.com/2017/11/02/4-takeaways-from-all-things-iot-week-at-eclipsecon-europe/20171024_111939&quot;&gt;&lt;img alt=&quot;Müge Kural, Eteration&quot; class=&quot;attachment-medium size-medium&quot; height=&quot;169&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/10/20171024_111939-300x169.jpg&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://blog.benjamin-cabe.com/2017/11/02/4-takeaways-from-all-things-iot-week-at-eclipsecon-europe/20171024_153927_1000&quot;&gt;&lt;img alt=&quot;Müge Kural, Eteration&quot; class=&quot;attachment-medium size-medium&quot; height=&quot;169&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/10/20171024_153927_1000-300x169.jpg&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;

&lt;p&gt;I was really pleased with the turnout of the &lt;a href=&quot;https://www.eclipsecon.org/europe2017/iot-day&quot; rel=&quot;noopener&quot;&gt;IoT Day&lt;/a&gt;. What was particularly interesting was hearing not only community insiders tell us about what they are doing for, and with, Eclipse IoT projects, but also getting the point of view of people who are pure consumers of the technology.&lt;/p&gt;
&lt;p&gt;This year, for example, we had people like Müge Kural (Eteration) or Nicola La Gloria (Kynetics) telling us how projects like Eclipse Kura or Eclipse hawkBit have helped them implement use cases such as &lt;strong&gt;advanced dashboards for Electric Vehicles&lt;/strong&gt;, or &lt;strong&gt;scalable software updates for Android-based IoT devices&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Look out for the video recordings of their talks, in the meantime, you can read more about Kynetics’ story in our recently published &lt;a href=&quot;https://iot.eclipse.org/case-studies/&quot; rel=&quot;noopener&quot;&gt;case study&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Eclipse IoT Testbeds Hackday&lt;/h2&gt;
&lt;figure class=&quot;wp-caption aligncenter&quot; id=&quot;attachment_2949&quot; style=&quot;width: 300px;&quot;&gt;&lt;a href=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/10/20171025_103300_1000.jpg&quot;&gt;&lt;img alt=&quot;Open IoT Testbed Hackday at EclipseCon Europe&quot; class=&quot;wp-image-2949 size-medium&quot; height=&quot;169&quot; src=&quot;https://blog.benjamin-cabe.com/wp-content/uploads/2017/10/20171025_103300_1000-300x169.jpg&quot; width=&quot;300&quot; /&gt;&lt;/a&gt;Open IoT Testbed Hackday at EclipseCon Europe&lt;/figure&gt;
&lt;p&gt;As you probably know by now, we are ramping up our &lt;a href=&quot;https://iot.eclipse.org/testbeds&quot; rel=&quot;noopener&quot;&gt;Open IoT Testbeds&lt;/a&gt; initiative, and it was great to use EclipseCon Europe as an opportunity to spend some quality time with the different companies involved in the testbeds and discuss next steps. To encourage collaboration, we held a “hackday” on Wednesday.&lt;/p&gt;
&lt;p&gt;There was a strong focus on the &lt;a href=&quot;https://iot.eclipse.org/testbeds/production-performance-management/&quot; rel=&quot;noopener&quot;&gt;Industry 4.0 / Production Performance Management testbed&lt;/a&gt;, and it was great to see participants from different companies sitting at the same table, brainstorming about the roadmap for the next few months.&lt;/p&gt;
&lt;p&gt;One of my action items from the hackday was to get a mailing list set up. So, &lt;strong&gt;if you want to get more involved in the testbeds&lt;/strong&gt;, you can now &lt;a href=&quot;https://dev.eclipse.org/mailman/listinfo/iot-testbeds&quot; rel=&quot;noopener&quot;&gt;subscribe to iot-testbeds@eclipse.org&lt;/a&gt; to participate!&lt;/p&gt;
&lt;h2&gt;It’s all about the integration&lt;/h2&gt;
&lt;p&gt;EclipseCon Europe coincides with the &lt;a href=&quot;https://blog.benjamin-cabe.com/2012/10/08/m2m-at-eclipsecon-europe&quot;&gt;anniversary of the Eclipse IoT Working Group,&lt;/a&gt; and 6 years into the adventure it is great to see that this year, even more than others, the project teams spent a lot of time discussing how to better integrate the different projects with one another. For example, it has become pretty clear that &lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noopener&quot;&gt;Eclipse hono&lt;/a&gt; will probably become the de-facto standard for device connectivity, and there were lots of discussions on how to provide hono protocol adapters for PPMP (Eclipse Unide), OPC-UA (Eclipse Milo), or Eclipse Kura gateways.&lt;/p&gt;
&lt;p&gt;Also, at the IoT WG meeting, we discussed how to structure the community work better and collaborate towards a more integrated Eclipse IoT stack. It has been proposed that we establish a sub-committee of the IoT WG dedicated to integration work. Expect to see more on that topic soon!&lt;/p&gt;
&lt;h2&gt;New projects got unveiled&lt;/h2&gt;
&lt;p&gt;You may have seen the news: just a week before EclipseCon, &lt;strong&gt;two new Eclipse IoT project proposals have been announced&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;First is &lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-thingweb&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Eclipse Thingweb&lt;/strong&gt;&lt;/a&gt;, a project that will be hosting an open-source toolkit for the &lt;a href=&quot;https://www.w3.org/WoT/&quot; rel=&quot;noopener&quot;&gt;W3C Web of Things&lt;/a&gt; ecosystem. Matthias Kovatsch from Siemens presented the project, and you can get his slides &lt;a href=&quot;https://wiki.eclipse.org/images/7/73/2017_Thingweb-Proposal.pdf&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;The other project, &lt;strong&gt;&lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-cyclone&quot; rel=&quot;noopener&quot;&gt;Eclipse Cyclone&lt;/a&gt;&lt;/strong&gt;, will put an open source implementation of the DDS (Data Distribution Service) middleware standard of IoT developers. Hans van’t Hag from ADLINK gave the presentation below, and his slides are &lt;a href=&quot;https://wiki.eclipse.org/images/e/ed/Eclipse_cyclone.pdf&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;I am looking forward to seeing these projects move to Eclipse IoT over the next few months!&lt;/p&gt;
 &lt;p&gt;The post &lt;a href=&quot;https://blog.benjamin-cabe.com/2017/11/02/4-takeaways-from-all-things-iot-week-at-eclipsecon-europe&quot; rel=&quot;nofollow&quot;&gt;4 Takeaways from “All Things IoT” week at EclipseCon Europe&lt;/a&gt; appeared first on &lt;a href=&quot;https://blog.benjamin-cabe.com&quot; rel=&quot;nofollow&quot;&gt;Benjamin Cabé&lt;/a&gt;.&lt;/p&gt;
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/benjamin-cabe-planet-eclipse/~4/vClHEGA6I8U&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 02 Nov 2017 11:51:55 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Has it only been six months?</title>
	<guid isPermaLink="false">https://medium.com/p/481ce1634241</guid>
	<link>https://medium.com/@donraab/has-it-only-been-six-months-481ce1634241?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Has it only been six months? You accomplished so much already! Looking forward to another 6 months. Thank you for making it easy for so many new and some old contributors to contribute to Eclipse Collections!&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=481ce1634241&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 01 Nov 2017 03:56:14 +0000</pubDate>
</item>
<item>
	<title>Nikhil Nanivadekar: Leading Eclipse Collections… My 6 month story</title>
	<guid isPermaLink="false">https://medium.com/p/3dcb71bf76d6</guid>
	<link>https://medium.com/oracledevs/leading-eclipse-collections-my-6-month-story-3dcb71bf76d6?source=rss-4285d8a2ca86------2</link>
	<description>&lt;p&gt;Leading Eclipse Collections… My 6 month story&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/946/1*WHxixmrLvY5i29owQJ1uGQ.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;In April ‘17, I was voted in as a project lead of &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt;. I have been &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;contributing &lt;/a&gt;to the framework since even before it was called Eclipse Collections. I still remember my first contribution; I added a constructor to &lt;a href=&quot;https://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/impl/multimap/list/FastListMultimap.html#FastListMultimap-java.lang.Iterable-&quot;&gt;Multimap&lt;/a&gt; which takes an Iterable&amp;lt;Pair&amp;lt;K, V&amp;gt;&amp;gt; as input. After that contribution, I never looked back and have been contributing to the framework ever since. I am a Mechanical Engineer turned software developer, so, if anyone had asked me if I would contribute to open source frameworks, I would have said “In your dreams!”.&lt;/p&gt;&lt;p&gt;In March ‘17 under the guidance of Hiroshi I released &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/8.1.0&quot;&gt;Eclipse Collections 8.1.0&lt;/a&gt;. I still remember being nervous hitting push for Maven Central and publish for release notes. Hiroshi handed over his role to me starting April ‘17. He did a phenomenal job as a project lead and made sure the project was in good shape before handing over to me. Now it was my job to keep it well maintained and move it forward.&lt;/p&gt;&lt;p&gt;Since April ‘17, we have done a &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/8.2.0&quot;&gt;minor release&lt;/a&gt; and released &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/releases/tag/9.0.0&quot;&gt;Eclipse Collections 9.0.0&lt;/a&gt;. We have added a lot of new features to the project mainly &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/issues/235&quot;&gt;Java 9 support&lt;/a&gt;, &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/pull/219&quot;&gt;OSGi support&lt;/a&gt;, enhanced symmetry between object and primitive collections. We also designed a logo and had laptop stickers and t-shirts at JavaOne. This would not have been possible without the help, guidance, support and contributions from members of the community. I sincerely thank them for their involvement and encourage them to keep on being involved and invite new members to help us enhance and improve the library for all of us.&lt;/p&gt;&lt;p&gt;What worked for me in the transition:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Direction from previous project leads:&lt;/strong&gt; I spent a lot of time with Hiroshi understanding the responsibilities of being a project lead. Craig was there to help out and quintessential Don was there to ensure I had all the help I needed. This was the most important part of transition.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; This was one of the most under-rated aspects of transition. In addition to the documentation found on Eclipse Foundation’s Project Handbook, we have documentation to help us in our specific use-case. If I added a new step I made sure to update documentation. This requires a lot of discipline but is worth the effort!&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Familiarity with infrastructure, timelines and formalities:&lt;/strong&gt; We use Travis for builds for contributions, and Hudson for release, deploy, Javadoc builds. Both of them have fair bit of nuances and being familiar with them helps speed things up. There are few time critical steps which need to be executed for each release and some formalities which need to be completed. Being familiar with them helps a lot. Practice makes you perfect!&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Roadmap:&lt;/strong&gt; A roadmap helps me plan out the release timelines and timely staging of milestone releases. I try to have a &lt;a href=&quot;https://github.com/eclipse/eclipse-collections/wiki/Roadmap&quot;&gt;roadmap&lt;/a&gt; of one or two releases in future helps committers, contributors.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Questions:&lt;/strong&gt; I don’t feel bad about saying “I don’t know” on a pull request/issue/commit. Often I ask for documentation (if I am unable to find it), and go through it. Sometimes, I loop in someone else who might be an expert to help out. I have seen that the community is receptive to such questions and has always helped me with answers.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Innovation:&lt;/strong&gt; For a framework to remain healthy it needs to innovate. Sometimes, it is necessary to experiment with new features/ new technologies to see how the community receives it. Before I start an experiment, I always run the idea by someone (generally Don). I am receptive to critical feedback, have few times dropped off my idea because it did not pan out well.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Publicize:&lt;/strong&gt; It is important to publicize the framework otherwise community loses interest. Once community loses interest, we lose motivation to keep on innovating. So, best way to not let community lose interest is to keep on publicizing. And best way for community to help me innovate is to support me with ideas/questions/contributions.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ask feedback:&lt;/strong&gt; This ties with publicity aspect. I am receptive to feedback from users, other project leads, experts or anyone from the community. Feedback helps me analyze requirements of community as well as improve the framework.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Pride:&lt;/strong&gt; With great power comes great responsibility, but there comes pride too! I am proud of the framework and I am proud to be the lead of Eclipse Collections.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;I plan to publish blogs which highlight features of Eclipse Collections, my experience as a Java developer, my experiments building and programming robots.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=3dcb71bf76d6&quot; width=&quot;1&quot; /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/leading-eclipse-collections-my-6-month-story-3dcb71bf76d6&quot;&gt;Leading Eclipse Collections… My 6 month story&lt;/a&gt; was originally published in &lt;a href=&quot;https://medium.com/oracledevs&quot;&gt;Oracle Developers&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;</description>
	<pubDate>Wed, 01 Nov 2017 03:00:26 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: Spring Tool Suite 3.9.1 Released</title>
	<guid isPermaLink="true">http://www.infoq.com/news/2017/10/sts-released?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>http://www.infoq.com/news/2017/10/sts-released?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;http://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Pivotal recently released version 3.9.1 of its Spring Tool Suite (STS), the Eclipse-based IDE for developing applications in Spring Framework. STS has been updated to Eclipse Oxygen.1a, which includes support for JDK 9 and JUnit 5 out of the box.&lt;/p&gt; &lt;i&gt;By Amit K Gupta&lt;/i&gt;</description>
	<pubDate>Tue, 31 Oct 2017 21:30:00 +0000</pubDate>
</item>
<item>
	<title>Michael Vorburger: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-2224194412636345302.post-7968449067941517108</guid>
	<link>http://blog2.vorburger.ch/2017/10/javasecurityinvalidalgorithmparameterex.html</link>
	<description>When I first tried out to run my Eclipse IDE under the recently release Java 9, I just downloaded an OpenJDK 9 TGZ from &lt;a href=&quot;http://jdk.java.net/9/&quot;&gt;http://jdk.java.net/9/&lt;/a&gt; (because on Fedora 26 there didn't seem to be an RPM package, yet; I'm sure this will come in Fedora 27).&lt;br /&gt;&lt;br /&gt;Eclipse then gave me the InvalidAlgorithmParameterException error shown below, and this fixed it:&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace;&quot;&gt;mv ~/bin/jdk-9/lib/security/cacerts{,.original}&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace;&quot;&gt;ln -s /etc/pki/java/cacerts ~/bin/jdk-9/lib/security/cacerts&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Hope this little tip is useful for others as well; give me a &quot;thumbs up&quot; +1 comment if it is!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;eclipse.buildId=4.8.0.I20170913-2000&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;java.version=9.0.1&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;java.vendor=Oracle Corporation&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_IN&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Framework arguments:  -product org.eclipse.epp.package.java.product&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Command-line arguments:  -os linux -ws gtk -arch x86_64 -product org.eclipse.epp.package.java.product&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;org.eclipse.equinox.p2.transport.ecf&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Error&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Mon Oct 30 16:28:26 CET 2017&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Unable to read repository at https://spotbugs.github.io/eclipse/content.xml.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;javax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.Alerts.getSSLException(Alerts.java:214)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1969)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1921)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1904)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1436)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1413)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:553)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.eclipse.ecf.provider.filetransfer.httpclient4.SNIAwareHttpClient$1.connectSocket(SNIAwareHttpClient.java:64)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:412)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:328)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.eclipse.ecf.provider.filetransfer.httpclient4.HttpClientFileSystemBrowser.runRequest(HttpClientFileSystemBrowser.java:263)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.eclipse.ecf.provider.filetransfer.browse.AbstractFileSystemBrowser$DirectoryJob.run(AbstractFileSystemBrowser.java:69)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at org.eclipse.core.internal.jobs.Worker.run(Worker.java:56)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Caused by: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.validator.PKIXValidator.&amp;lt;init&amp;gt;(PKIXValidator.java:89)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.validator.Validator.getInstance(Validator.java:181)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:330)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:180)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:192)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:133)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.ClientHandshaker.checkServerCerts(ClientHandshaker.java:1825)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.ClientHandshaker.certificateStatus(ClientHandshaker.java:1676)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:272)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.Handshaker.processLoop(Handshaker.java:1086)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.Handshaker.processRecord(Handshaker.java:1020)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.processInputRecord(SSLSocketImpl.java:1137)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1074)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:973)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1402)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1429)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;... 13 more&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/java.security.cert.PKIXParameters.&amp;lt;init&amp;gt;(PKIXParameters.java:120)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/java.security.cert.PKIXBuilderParameters.&amp;lt;init&amp;gt;(PKIXBuilderParameters.java:104)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;at java.base/sun.security.validator.PKIXValidator.&amp;lt;init&amp;gt;(PKIXValidator.java:86)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Courier New, Courier, monospace; font-size: xx-small;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;... 28 more&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 30 Oct 2017 16:46:16 +0000</pubDate>
	<author>noreply@blogger.com (Michael Vorburger)</author>
</item>
<item>
	<title>Donald Raab: Lazy and inexhaustible</title>
	<guid isPermaLink="false">https://medium.com/p/f41ffda857dc</guid>
	<link>https://medium.com/@donraab/lazy-and-inexhaustible-f41ffda857dc?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;Laziness is a virtue. Sometimes you want it to be repeatable.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*0gjyUH1TFyDKHZCiFlYLVA.jpeg&quot; /&gt;The lazy hazy crazy days of summer are gone but will be back again.&lt;/figure&gt;&lt;p&gt;In programming, laziness can be a very good thing. Lazy initialization allows us to avoid creating expensive resources until they are needed. Lazy iteration allows us to avoid creating temporary data structures and potentially to reduce the total amount of work needed in order to perform a computation. Two built-in paradigms existed for lazy iteration in Java before Java 8. They are &lt;strong&gt;&lt;em&gt;Iterable&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Iterator&lt;/em&gt;&lt;/strong&gt;. An Iterable can be used over and over again, as it can continue to give you a brand new Iterator. An Iterator can only be used once, as there is no way to reset it once you’ve gotten to the last element via next().&lt;/p&gt;&lt;p&gt;In Java 8, Streams were added with methods that are lazy (e.g. map, filter, etc.). Stream is like an Iterator, in that it can only be used once with a terminal operation like forEach or collect. This means you have to be careful not to exhaust a Stream and then try and use it again.&lt;/p&gt;&lt;p&gt;This is what will happen at runtime if you try and use a Stream more than once.&lt;/p&gt;&lt;pre&gt;java.lang.IllegalStateException: stream has already been operated upon or closed&lt;/pre&gt;&lt;p&gt;I am going to use the &lt;strong&gt;&lt;em&gt;getAgeStatisticsOfPets&lt;/em&gt;&lt;/strong&gt; test in &lt;a href=&quot;https://github.com/eclipse/eclipse-collections-kata/blob/master/pet-kata/src/test/java/org/eclipse/collections/petkata/Exercise4Test.java#L35&quot;&gt;Exercise 4 of the Eclipse Collections Pet Kata &lt;/a&gt;to illustrate how you can work with a Stream without getting an IllegalStateException. I will also show you some other alternatives that are lazy using &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;First, here’s the code I would like to write for the test in Exercise 4 of the Pet Kata. I am using an IntStream (obtained via mapToInt) in order to avoid boxing ints as Integers. This code compiles but will fail upon execution.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    IntStream petAges = this.people&lt;br /&gt;            .stream()&lt;br /&gt;            .flatMap(person -&amp;gt; person.getPets().stream())&lt;br /&gt;            .mapToInt(Pet::getAge);&lt;/pre&gt;&lt;pre&gt;    Set&amp;lt;Integer&amp;gt; uniqueAges =&lt;br /&gt;        petAges.boxed().collect(Collectors.&lt;em&gt;toSet&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats = petAges.summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4), uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), petAges.min().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), petAges.max().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), petAges.sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(),&lt;br /&gt;                        petAges.average().getAsDouble(), 0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(), petAges.count());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.allMatch(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(petAges.anyMatch(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.noneMatch(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;The code will run until this line attempts to execute.&lt;/p&gt;&lt;pre&gt;IntSummaryStatistics stats = petAges.summaryStatistics();&lt;/pre&gt;&lt;p&gt;That’s when the IllegalStateException is thrown. The call to collect in the previous line caused the Stream to become exhausted.&lt;/p&gt;&lt;p&gt;One option I have to make the code work is to pre-calculate the pets as a flattened List and then recreate the IntStream for the ages as I need them.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Pet&amp;gt; petAges = this.people&lt;br /&gt;            .stream()&lt;br /&gt;            .flatMap(person -&amp;gt; person.getPets().stream())&lt;br /&gt;            .collect(Collectors.&lt;em&gt;toList(&lt;/em&gt;));&lt;/pre&gt;&lt;pre&gt;    Set&amp;lt;Integer&amp;gt; uniqueAges =&lt;br /&gt;            petAges.stream()&lt;br /&gt;                    .mapToInt(Pet::getAge)&lt;br /&gt;                    .boxed()&lt;br /&gt;                    .collect(Collectors.&lt;em&gt;toSet&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats =&lt;br /&gt;            petAges.stream()&lt;br /&gt;                    .mapToInt(Pet::getAge)&lt;br /&gt;                    .summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4), uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), petAges.stream()&lt;br /&gt;            .mapToInt(Pet::getAge).min().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), petAges.stream()&lt;br /&gt;            .mapToInt(Pet::getAge).max().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), petAges.stream()&lt;br /&gt;            .mapToInt(Pet::getAge).sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(), petAges.stream()&lt;br /&gt;                    .mapToInt(Pet::getAge).average().getAsDouble(),&lt;br /&gt;            0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(), petAges.size());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(&lt;br /&gt;            petAges.stream()&lt;br /&gt;                    .mapToInt(Pet::getAge)&lt;br /&gt;                    .allMatch(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(&lt;br /&gt;            petAges.stream()&lt;br /&gt;                    .mapToInt(Pet::getAge)&lt;br /&gt;                    .anyMatch(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(&lt;br /&gt;            petAges.stream()&lt;br /&gt;                    .mapToInt(Pet::getAge)&lt;br /&gt;                    .noneMatch(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This works but I had to write a lot of duplicate code. I have to call this code over and over again to recreate the IntStream of pet ages.&lt;/p&gt;&lt;pre&gt;petAges.stream().mapToInt(Pet::getAge)&lt;/pre&gt;&lt;p&gt;Since I do not like duplicating code, I want to find a solution for this problem. One solution would be to put this duplicate code in a Supplier and calculate it on demand by calling the get() method on the Supplier.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    List&amp;lt;Pet&amp;gt; pets = this.people&lt;br /&gt;            .stream()&lt;br /&gt;            .flatMap(person -&amp;gt; person.getPets().stream())&lt;br /&gt;            .collect(Collectors.&lt;em&gt;toList&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    Supplier&amp;lt;IntStream&amp;gt; petAges =&lt;br /&gt;            () -&amp;gt; &lt;em&gt;pets&lt;/em&gt;.stream().mapToInt(Pet::getAge);&lt;/pre&gt;&lt;pre&gt;    Set&amp;lt;Integer&amp;gt; uniqueAges =&lt;br /&gt;            petAges.get().boxed().collect(Collectors.&lt;em&gt;toSet&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats =&lt;br /&gt;            petAges.get().summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4), uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), &lt;br /&gt;            petAges.get().min().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), &lt;br /&gt;            petAges.get().max().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), &lt;br /&gt;            petAges.get().sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(), &lt;br /&gt;            petAges.get().average().getAsDouble(),&lt;br /&gt;            0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(), &lt;br /&gt;            petAges.get().count());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.get().allMatch(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(petAges.get().anyMatch(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.get().noneMatch(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This reduces the amount of duplicate code I had to write. I can go one step further and make the flatCollect not have to collect into a List, by having the Supplier do more of the work.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    Supplier&amp;lt;IntStream&amp;gt; petAges =&lt;br /&gt;            () -&amp;gt; this.people&lt;br /&gt;                    .stream()&lt;br /&gt;                    .flatMap(person -&amp;gt; person.getPets().stream())&lt;br /&gt;                    .mapToInt(Pet::getAge);&lt;/pre&gt;&lt;pre&gt;    Set&amp;lt;Integer&amp;gt; uniqueAges =&lt;br /&gt;            petAges.get().boxed().collect(Collectors.&lt;em&gt;toSet&lt;/em&gt;());&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats =&lt;br /&gt;            petAges.get().summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(Sets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4), uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(),&lt;br /&gt;            petAges.get().min().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(),&lt;br /&gt;            petAges.get().max().getAsInt());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(),&lt;br /&gt;            petAges.get().sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(),&lt;br /&gt;            petAges.get().average().getAsDouble(),&lt;br /&gt;            0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(),&lt;br /&gt;            petAges.get().count());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.get().allMatch(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(petAges.get().anyMatch(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.get().noneMatch(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;This almost feels like creating a lazy Iterable, where each time we need to do something, we create an Iterator to perform an additional function. In &lt;a href=&quot;http://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt;, there is a &lt;a href=&quot;http://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/api/LazyIterable.html&quot;&gt;LazyIterable&lt;/a&gt; type, that can be created from any &lt;a href=&quot;http://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/api/RichIterable.html#asLazy--&quot;&gt;RichIterable&lt;/a&gt;. A LazyIterable can be used safely as many times as you want. It may be expensive to recalculate the functions over and over again, but it will allow you to do so and will not become exhausted after the first time you use it.&lt;/p&gt;&lt;p&gt;The following shows how you can solve this problem using a &lt;a href=&quot;http://www.eclipse.org/collections/javadoc/9.0.0/org/eclipse/collections/api/LazyIntIterable.html&quot;&gt;LazyIntIterable&lt;/a&gt; with Eclipse Collections.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    LazyIntIterable petAges = this.people&lt;br /&gt;            .asLazy()&lt;br /&gt;            .flatCollect(Person::getPets)&lt;br /&gt;            .collectInt(Pet::getAge);&lt;/pre&gt;&lt;pre&gt;    IntSet uniqueAges = petAges.toSet();&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats = petAges.summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            IntSets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4),&lt;br /&gt;            uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), petAges.min());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), petAges.max());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), petAges.sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(), petAges.average(), 0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(), petAges.size());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.allSatisfy(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(petAges.anySatisfy(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.noneSatisfy(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Once I have a LazyIntIterable, I do not need to box the unique ages into a Set of Integer. I can instead store them in an IntSet as I have above, simply by calling toSet() on the LazyIntIterable.&lt;/p&gt;&lt;p&gt;Because LazyIntIterable is Lazy, it does not pre-calculate and store the pet ages. It has to execute the flatCollect() and collectInt() each time you call a terminal method like toSet, summaryStatistics, min, max, sum, average, size, any/all/noneSatisfy. If I want the code to be more efficient, I can pre-calculate the pet ages and store them in an IntList or IntBag. I will use an IntBag here, as there are duplicate ages but order doesn’t matter.&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    IntBag petAges = this.people&lt;br /&gt;            .asLazy()&lt;br /&gt;            .flatCollect(Person::getPets)&lt;br /&gt;            .collectInt(Pet::getAge)&lt;br /&gt;            .toBag();&lt;/pre&gt;&lt;pre&gt;    IntSet uniqueAges = petAges.toSet();&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats = petAges.summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            IntSets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4),&lt;br /&gt;            uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), petAges.min());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), petAges.max());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), petAges.sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(), petAges.average(), 0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(), petAges.size());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.allSatisfy(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(petAges.anySatisfy(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.noneSatisfy(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;All I had to change in the code to make this work was to call the method toBag() after calling collectInt() and change the type of petAges from &lt;em&gt;LazyIntIterable&lt;/em&gt; to &lt;em&gt;IntBag&lt;/em&gt;. No other code needed to change. This is because our primitive collections and primitive lazy iterables in Eclipse Collections have &lt;a href=&quot;https://medium.com/@donraab/symmetric-sympathy-2c59d4541d60&quot;&gt;good symmetry&lt;/a&gt;. Notice how there is no boxing of ints to Integer objects in either the &lt;em&gt;LazyIntIterable&lt;/em&gt; or &lt;em&gt;IntBag&lt;/em&gt; solution.&lt;/p&gt;&lt;p&gt;I can easily change the type from &lt;em&gt;IntBag&lt;/em&gt; to &lt;em&gt;IntList&lt;/em&gt;, just by changing the toBag() method call to toList().&lt;/p&gt;&lt;pre&gt;@Test&lt;br /&gt;public void getAgeStatisticsOfPets()&lt;br /&gt;{&lt;br /&gt;    IntList petAges = this.people.asLazy()&lt;br /&gt;            .flatCollect(Person::getPets)&lt;br /&gt;            .collectInt(Pet::getAge)&lt;br /&gt;            .toList();&lt;/pre&gt;&lt;pre&gt;    IntSet uniqueAges = petAges.toSet();&lt;/pre&gt;&lt;pre&gt;    IntSummaryStatistics stats = petAges.summaryStatistics();&lt;/pre&gt;&lt;pre&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(&lt;br /&gt;            IntSets.&lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt;.with(1, 2, 3, 4),&lt;br /&gt;            uniqueAges);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), petAges.min());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), petAges.max());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), petAges.sum());&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(), petAges.average(), 0.0);&lt;br /&gt;    Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getCount(), petAges.size());&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.allSatisfy(i -&amp;gt; i &amp;gt; 0));&lt;br /&gt;    Assert.&lt;em&gt;assertFalse&lt;/em&gt;(petAges.anySatisfy(i -&amp;gt; i == 0));&lt;br /&gt;    Assert.&lt;em&gt;assertTrue&lt;/em&gt;(petAges.noneSatisfy(i -&amp;gt; i &amp;lt; 0));&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;Once again, nothing else needs to change.&lt;/p&gt;&lt;p&gt;When you call min, max and average on an IntStream, you will get an OptionalInt or OptionalDouble. This is a good thing if you have the potential to have an empty result. OptionalInt and OptionalDouble will allow you to handle the cases where the result is empty. With Eclipse Collections, there is a different option for these three methods to help in the case where the iterable or collection is empty.&lt;/p&gt;&lt;pre&gt;Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMin(), petAges.minIfEmpty(0));&lt;br /&gt;Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getMax(), petAges.maxIfEmpty(0));&lt;br /&gt;Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getSum(), petAges.sum());&lt;br /&gt;Assert.&lt;em&gt;assertEquals&lt;/em&gt;(stats.getAverage(), petAges.averageIfEmpty(0.0), 0.0);&lt;/pre&gt;&lt;p&gt;The methods minIfEmpty, maxIfEmpty and averageIfEmpty allow you to specify a default value to use in the case of an empty result. In the future, we may also add minOptional, maxOptional and averageOptional if there is a need for them.&lt;/p&gt;&lt;p&gt;If you use Streams, and want them to be re-usable, then consider using them in conjunction with a Supplier. This will reduce the amount of duplicate code you will have to write. If you want inexhaustible laziness out of the box, then consider using Eclipse Collections, as you will get a lot of additional options that you can use in addition to Streams.&lt;/p&gt;&lt;p&gt;I hope this blog was useful and informative and showed some options for using Streams and Eclipse Collections LazyIterables effectively to solve the same problems. I also hope that you try out the Eclipse Collections katas on your own. I often teach the katas using both Streams and Eclipse Collections so developers can learn both APIs and understand what options they have available to them.&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=f41ffda857dc&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 30 Oct 2017 04:41:16 +0000</pubDate>
</item>
<item>
	<title>Doug Schaefer: EclipseCon Europe 2017 Quick Wrap Up</title>
	<guid isPermaLink="false">https://cdtdoug.ca/tag/eclipse/rss/59f48e5a63e10f05312469a9</guid>
	<link>https://cdtdoug.ca/eclipsecon-europe-2017-quick-wrap-up/</link>
	<description>&lt;div class=&quot;kg-card-markdown&quot;&gt;&lt;img alt=&quot;EclipseCon Europe 2017 Quick Wrap Up&quot; src=&quot;https://cdtdoug.ca/content/images/2017/10/20171023_174547.jpg&quot; /&gt;&lt;p&gt;My favorite EclipseCon of the many I've attended happened at one of the earliest ones. Of course there have been many good onces since, but this one was different because of the vibe that was happening. This was the 2005 edition at beautiful Hyatt Regency in Burlingame, California, our first in the &quot;Valley&quot;. It was a time when &lt;a href=&quot;https://www.eclipse.org/org/press-release/20050301eclipseconcommunity.htm&quot;&gt;companies were clamoring&lt;/a&gt; to be a part of the community. Borland was jumping head first to compete with IBM in the modeling space by joining as an Eclipse Strategic Member and that threw the IBM/Rational team into a tizzy as it had to learn how to work with a competitor in the open. It was so much fun to sit in the front row and watch the industry change in front of us in real time.&lt;/p&gt;
&lt;p&gt;EclipseCon Europe 2017 showed progress back towards that excitement. With a steady attendance of 600+, it really is the main event on the yearly calendar, at least for now. With all the activity recently around Java with Java EE moving to Eclipse and IBM finally releasing their J9 VM to the open, there's definitely a vibe in the air that brings back memories of those early EclipseCons. It will be very interesting to see how this evolves.&lt;/p&gt;
&lt;p&gt;Well, enough about Java :). It was a very good EclipseCon for Eclipse CDT project and tools for Embedded in general, probably the best since the glory days when we had our own CDT Summit events in the Montreal-Ottawa-Toronto corridor. As I put it to someone, &quot;CDT needs new blood and there's some blood on the doorstep, just need to get it inside.&quot; And I'm very excited to see some of the CDT contributors stepping up to help with some much needed revitalization of CDT's build system in the upcoming months. And with Jonah's work on the Debug Server Protocol and all the work going into the Language Server Protocol and the clangd language server, we're poised to bring CDT to a new generation that expect a more modern and lightweight experience.&lt;/p&gt;
&lt;p&gt;One final word for now, I have to reiterate what I said on Twitter and Facebook how incredibly honored I am to receive this year's Eclipse Lifetime Contribution Award. Those who know me well know I'm a very shy and introverted person. But there's always been something about the great people in the Eclipse community that brings me out of my shell. They make me feel a part of the family. For that I am and will be forever grateful.&lt;/p&gt;
&lt;p&gt;I've made so many friends along the way and I am immensely proud of what we as a community have built. I share this honor with everyone I've worked with and everyone whose helped me along the way, especially to QNX for giving me the responsibility to represent them in the community and to John Duimovich and CDT's first great leader Sebastien Marineau who made this crazy gamble to entrust me with the CDT project leadership :). All I can say is Thank You!&lt;/p&gt;
&lt;p&gt;Any way. I promised people at EclipseCon I'd write more. There's so much going on and my involvement and interest continues to grow as exciting new technologies are becoming mainstream (think embedded systems meets cloud meets artificial intelligence and all the runtime and tool needs in between). So much to write about. I can't wait to get into it.&lt;/p&gt;
&lt;/div&gt;</description>
	<pubDate>Sat, 28 Oct 2017 14:59:36 +0000</pubDate>
</item>

</channel>
</rss>
